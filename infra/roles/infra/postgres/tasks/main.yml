---
- name: Install PostgreSQL packages
  become: true
  ansible.builtin.package:
    name: "{{ postgres_packages }}"
    state: present

- name: Ensure PostgreSQL configuration directory exists
  become: true
  ansible.builtin.file:
    path: "{{ postgres_conf_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0750'

- name: Ensure PostgreSQL data directory exists
  become: true
  ansible.builtin.file:
    path: "{{ postgres_data_dir }}"
    state: directory
    owner: postgres
    group: postgres
    mode: '0700'

- name: Deploy postgresql.conf
  become: true
  ansible.builtin.template:
    src: postgresql.conf.j2
    dest: "{{ postgres_conf_file }}"
    owner: postgres
    group: postgres
    mode: '0644'
  notify:
    - restart postgres
    - postgres healthcheck

- name: Deploy pg_hba.conf
  become: true
  ansible.builtin.template:
    src: pg_hba.conf.j2
    dest: "{{ postgres_hba_file }}"
    owner: postgres
    group: postgres
    mode: '0640'
  notify:
    - restart postgres
    - postgres healthcheck

- name: Ensure PostgreSQL service is enabled and started
  become: true
  ansible.builtin.service:
    name: "{{ postgres_service_name }}"
    state: started
    enabled: true
  notify:
    - postgres healthcheck

- name: Ensure PostgreSQL superuser has password
  become: true
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ postgres_superuser }}"
    password: "{{ postgres_superuser_password }}"
    encrypted: false
    role_attr_flags: 'SUPERUSER,LOGIN'

- name: Ensure application database exists
  become: true
  become_user: postgres
  community.postgresql.postgresql_db:
    name: "{{ postgres_db }}"
    owner: "{{ postgres_superuser }}"
